{"version":3,"sources":["../../../src/api/course_registration/model.js"],"names":["CourseSchema","Schema","user","type","Types","ObjectId","ref","required","courseName","String","status","date","Date","now","timestamps","toJSON","virtuals","transform","obj","ret","_id","index","createdAt","Course","mongoose","model"],"mappings":";;;;;;;;;AASA;;;;;;AATA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,IAAMA,YAAY,GAAG,IAAIC,gBAAJ,CACnB;AACEC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEF,iBAAOG,KAAP,CAAaC,QADf;AAEJC,IAAAA,GAAG,EAAE,MAFD;AAGJC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,aAAP;AAHN,GADR;AAOEC,EAAAA,UAAU,EAAE;AACVL,IAAAA,IAAI,EAAEM,MADI;AAEV,eAAS,EAFC;AAGVF,IAAAA,QAAQ,EAAE;AAHA,GAPd;AAYEG,EAAAA,MAAM,EAAE;AACNP,IAAAA,IAAI,EAAEM,MADA;AAEN,YAAM,CAAC,WAAD,EAAc,SAAd,CAFA;AAGN,eAAS;AAHH,GAZV;AAiBEE,EAAAA,IAAI,EAAE;AAAER,IAAAA,IAAI,EAAES,IAAR;AAAc,eAASA,IAAI,CAACC;AAA5B;AAjBR,CADmB,EAoBnB;AACEC,EAAAA,UAAU,EAAE,IADd;AAEEC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,IADJ;AAENC,IAAAA,SAAS,EAAE,mBAACC,GAAD,EAAMC,GAAN,EAAc;AACvB,aAAOA,GAAG,CAACC,GAAX;AACD;AAJK;AAFV,CApBmB,CAArB;AA+BApB,YAAY,CAACqB,KAAb,CAAmB;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAnB;;AAEA,IAAMC,MAAM,GAAGC,qBAASC,KAAT,CAAe,QAAf,EAAyBzB,YAAzB,CAAf;;AAEO,IAAQK,QAAR,GAAqBmB,qBAASpB,KAA9B,CAAQC,QAAR;;eACQkB,M","sourcesContent":["/**\n * @author Godfrey Ejeh\n * @description Creating the user account\n * @property {String} user user's email account\n * @property {String} courseName user's courseName\n * @property {String} status user's status\n * @property {String} date user's date 0f course registration\n *  */\n\nimport mongoose, { Schema } from \"mongoose\";\n\nconst CourseSchema = new Schema(\n  {\n    user: {\n      type: Schema.Types.ObjectId,\n      ref: \"User\",\n      required: [true, \"Why no user\"],\n    },\n\n    courseName: {\n      type: String,\n      default: \"\",\n      required: true,\n    },\n    status: {\n      type: String,\n      enum: [\"completed\", \"pending\"],\n      default: \"pending\",\n    },\n    date: { type: Date, default: Date.now },\n  },\n  {\n    timestamps: true,\n    toJSON: {\n      virtuals: true,\n      transform: (obj, ret) => {\n        delete ret._id;\n      },\n    },\n  }\n);\n\nCourseSchema.index({ createdAt: 1 });\n\nconst Course = mongoose.model(\"Course\", CourseSchema);\n\nexport const { ObjectId } = mongoose.Types;\nexport default Course;\n"],"file":"model.js"}