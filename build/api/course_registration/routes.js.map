{"version":3,"sources":["../../../src/api/course_registration/routes.js"],"names":["router","express","Router","post","isValidUser","course","create","get","isValidAdmin","findAll"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAF,MAAM,CAACG,IAAP,CAAY,SAAZ,EAAuBC,wBAAvB,EAAoCC,MAAM,CAACC,MAA3C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAN,MAAM,CAACO,GAAP,CAAW,gBAAX,EAA6BC,yBAA7B,EAA2CH,MAAM,CAACI,OAAlD;eAEeT,M","sourcesContent":["import express from \"express\";\nimport * as course from \"./controller\";\nimport { isValidUser, isValidAdmin } from \"../auth/controller\";\n\nconst router = express.Router();\n\n/**\n * @api {post} /course create course\n * @apiName CreateCourse\n * @apiGroup course\n * @apiParam {String} courseName course courseName\n * @apiParam {String} date course date\n * @apiParam {String} status course status\n * @apiSuccess {Object} agent agent's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 agent not found.\n */\n\nrouter.post(\"/course\", isValidUser, course.create);\n\n/**\n * @api {get} /user Retrieve courses\n * @apiName Retrievecourses\n * @apiGroup courses\n * @apiSuccess {Object[]} rows List of courses\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/courses/admin\", isValidAdmin, course.findAll);\n\nexport default router;\n"],"file":"routes.js"}