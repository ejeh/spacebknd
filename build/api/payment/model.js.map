{"version":3,"sources":["../../../src/api/payment/model.js"],"names":["userPaymentSchema","Schema","full_name","type","String","email","lowercase","max","trim","required","amount","Number","reference","dateOfPayment","Date","now","user","Types","ObjectId","ref","course","timestamps","toJSON","virtuals","transform","obj","ret","_id","index","createdAt","UserPayment","mongoose","model"],"mappings":";;;;;;;;;AAUA;;;;;;AAVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,IAAMA,iBAAiB,GAAG,IAAIC,gBAAJ,CACxB;AACEC,EAAAA,SAAS,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgB,eAAS;AAAzB,GADb;AAEEC,EAAAA,KAAK,EAAE;AACLF,IAAAA,IAAI,EAAEC,MADD;AAELE,IAAAA,SAAS,EAAE,IAFN;AAGLC,IAAAA,GAAG,EAAE,GAHA;AAILC,IAAAA,IAAI,EAAE,IAJD;AAKLC,IAAAA,QAAQ,EAAE;AALL,GAFT;AASEC,EAAAA,MAAM,EAAE;AAAEP,IAAAA,IAAI,EAAEQ,MAAR;AAAgBF,IAAAA,QAAQ,EAAE;AAA1B,GATV;AAUEG,EAAAA,SAAS,EAAE;AAAET,IAAAA,IAAI,EAAEC,MAAR;AAAgBK,IAAAA,QAAQ,EAAE;AAA1B,GAVb;AAWEI,EAAAA,aAAa,EAAE;AAAEV,IAAAA,IAAI,EAAEW,IAAR;AAAc,eAASA,IAAI,CAACC;AAA5B,GAXjB;AAYEC,EAAAA,IAAI,EAAE;AACJb,IAAAA,IAAI,EAAEF,iBAAOgB,KAAP,CAAaC,QADf;AAEJC,IAAAA,GAAG,EAAE,MAFD;AAGJV,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,aAAP;AAHN,GAZR;AAiBEW,EAAAA,MAAM,EAAE;AACNjB,IAAAA,IAAI,EAAEF,iBAAOgB,KAAP,CAAaC,QADb;AAENC,IAAAA,GAAG,EAAE,QAFC;AAGNV,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,eAAP;AAHJ;AAjBV,CADwB,EAwBxB;AACEY,EAAAA,UAAU,EAAE,IADd;AAEEC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,IADJ;AAENC,IAAAA,SAAS,EAAE,mBAACC,GAAD,EAAMC,GAAN,EAAc;AACvB,aAAOA,GAAG,CAACC,GAAX;AACD;AAJK;AAFV,CAxBwB,CAA1B;AAmCA3B,iBAAiB,CAAC4B,KAAlB,CAAwB;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAxB;;AAEA,IAAMC,WAAW,GAAGC,qBAASC,KAAT,CAAe,aAAf,EAA8BhC,iBAA9B,CAApB;;AAEO,IAAQkB,QAAR,GAAqBa,qBAASd,KAA9B,CAAQC,QAAR;;eACQY,W","sourcesContent":["/**\n * @author Godfrey Ejeh\n * @description Creating the user payment account\n * @property {String} email user's email account\n * @property {String} full_name user's fullname\n * @property {String} amount user's amount\n * @property {String} reference user's reference\n *\n *  */\n\nimport mongoose, { Schema } from \"mongoose\";\n\nconst userPaymentSchema = new Schema(\n  {\n    full_name: { type: String, default: \"\" },\n    email: {\n      type: String,\n      lowercase: true,\n      max: 100,\n      trim: true,\n      required: true,\n    },\n    amount: { type: Number, required: true },\n    reference: { type: String, required: true },\n    dateOfPayment: { type: Date, default: Date.now },\n    user: {\n      type: Schema.Types.ObjectId,\n      ref: \"User\",\n      required: [true, \"Why no user\"],\n    },\n    course: {\n      type: Schema.Types.ObjectId,\n      ref: \"Course\",\n      required: [true, \"Why no course\"],\n    },\n  },\n  {\n    timestamps: true,\n    toJSON: {\n      virtuals: true,\n      transform: (obj, ret) => {\n        delete ret._id;\n      },\n    },\n  }\n);\n\nuserPaymentSchema.index({ createdAt: 1 });\n\nconst UserPayment = mongoose.model(\"UserPayment\", userPaymentSchema);\n\nexport const { ObjectId } = mongoose.Types;\nexport default UserPayment;\n"],"file":"model.js"}