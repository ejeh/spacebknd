{"version":3,"sources":["../../../src/api/user/routes.js"],"names":["router","express","Router","put","isValidUser","user","update","get","findOne","isValidAdmin","findAll","destroy"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAF,MAAM,CAACG,GAAP,CAAW,OAAX,EAAoBC,uBAApB,EAAiCC,IAAI,CAACC,MAAtC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAN,MAAM,CAACO,GAAP,CAAW,eAAX,EAA4BH,uBAA5B,EAAyCC,IAAI,CAACG,OAA9C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAR,MAAM,CAACO,GAAP,CAAW,cAAX,EAA2BE,wBAA3B,EAAyCJ,IAAI,CAACK,OAA9C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAV,MAAM,UAAN,CAAc,eAAd,EAA+BS,wBAA/B,EAA6CJ,IAAI,CAACM,OAAlD;eAEeX,M","sourcesContent":["import express from \"express\";\nimport * as user from \"./contoller\";\nimport { isValidUser, isValidAdmin } from \"../auth/controller\";\n\nconst router = express.Router();\n\n/**\n * @api {put} /user Update user\n * @apiName Updateuser\n * @apiGroup user\n * @apiPermission master\n * @apiParam {String} access_token master access token.\n * @apiParam {String} fullname user's fullname\n * @apiParam {String} email  user's email address\n * @apiSuccess {Object} user user's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 user not found.\n */\nrouter.put(\"/user\", isValidUser, user.update);\n\n/**\n * @api {get} /user/:userId Retrieve user\n * @apiName RetrieveUser\n * @apiGroup User\n * @apiSuccess {Object} user user's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 user not found.\n */\nrouter.get(\"/user/:userId\", isValidUser, user.findOne);\n\n/**\n * @api {get} /user Retrieve user\n * @apiName Retrieveuser\n * @apiGroup user\n * @apiSuccess {Object[]} rows List of user\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/users/admin\", isValidAdmin, user.findAll);\n\n/**\n * @api {delete} /user/:userId Delete user\n * @apiName Deleteuser\n * @apiGroup user\n * @apiPermission master\n * @apiParam  access_token master access token.\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 user not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/user/:userId\", isValidAdmin, user.destroy);\n\nexport default router;\n"],"file":"routes.js"}