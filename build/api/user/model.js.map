{"version":3,"sources":["../../../src/api/user/model.js"],"names":["UserSchema","Schema","email","type","String","lowercase","max","trim","required","password","fullname","phone","address","date","Date","now","completeProfile","Boolean","timestamps","toJSON","virtuals","transform","obj","ret","_id","index","createdAt","User","mongoose","model","ObjectId","Types"],"mappings":";;;;;;;;;AAWA;;;;;;AAXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,IAAMA,UAAU,GAAG,IAAIC,gBAAJ,CACjB;AACEC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAEC,MADD;AAELC,IAAAA,SAAS,EAAE,IAFN;AAGLC,IAAAA,GAAG,EAAE,GAHA;AAILC,IAAAA,IAAI,EAAE,IAJD;AAKLC,IAAAA,QAAQ,EAAE;AALL,GADT;AAQEC,EAAAA,QAAQ,EAAE;AAAEN,IAAAA,IAAI,EAAEC,MAAR;AAAgBI,IAAAA,QAAQ,EAAE;AAA1B,GARZ;AASEE,EAAAA,QAAQ,EAAE;AAAEP,IAAAA,IAAI,EAAEC,MAAR;AAAgB,eAAS;AAAzB,GATZ;AAUEO,EAAAA,KAAK,EAAE;AAAER,IAAAA,IAAI,EAAEC,MAAR;AAAgB,eAAS;AAAzB,GAVT;AAWEQ,EAAAA,OAAO,EAAE;AAAET,IAAAA,IAAI,EAAEC,MAAR;AAAgB,eAAS;AAAzB,GAXX;AAYES,EAAAA,IAAI,EAAE;AAAEV,IAAAA,IAAI,EAAEW,IAAR;AAAc,eAASA,IAAI,CAACC;AAA5B,GAZR;AAaEC,EAAAA,eAAe,EAAE;AAAEb,IAAAA,IAAI,EAAEc,OAAR;AAAiB,eAAS;AAA1B;AAbnB,CADiB,EAgBjB;AACEC,EAAAA,UAAU,EAAE,IADd;AAEEC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,IADJ;AAENC,IAAAA,SAAS,EAAE,mBAACC,GAAD,EAAMC,GAAN,EAAc;AACvB,aAAOA,GAAG,CAACC,GAAX;AACD;AAJK;AAFV,CAhBiB,CAAnB;AA2BAxB,UAAU,CAACyB,KAAX,CAAiB;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAjB;;AAEA,IAAMC,IAAI,GAAGC,qBAASC,KAAT,CAAe,MAAf,EAAuB7B,UAAvB,CAAb;;AAEO,IAAQ8B,QAAR,GAAqBF,qBAASG,KAA9B,CAAQD,QAAR;;eACQH,I","sourcesContent":["/**\n * @author Godfrey Ejeh\n * @description Creating the user account\n * @property {String} email user's email account\n * @property {String} password user's password\n * @property {String} fullname user's fullname\n * @property {String} phone user's phone\n * @property {String} address user's address\n * @property {String} completeProfile user's completeProfile\n *\n *  */\nimport mongoose, { Schema } from \"mongoose\";\n\nconst UserSchema = new Schema(\n  {\n    email: {\n      type: String,\n      lowercase: true,\n      max: 100,\n      trim: true,\n      required: true,\n    },\n    password: { type: String, required: true },\n    fullname: { type: String, default: \"\" },\n    phone: { type: String, default: \"\" },\n    address: { type: String, default: \"\" },\n    date: { type: Date, default: Date.now },\n    completeProfile: { type: Boolean, default: false },\n  },\n  {\n    timestamps: true,\n    toJSON: {\n      virtuals: true,\n      transform: (obj, ret) => {\n        delete ret._id;\n      },\n    },\n  }\n);\n\nUserSchema.index({ createdAt: 1 });\n\nconst User = mongoose.model(\"User\", UserSchema);\n\nexport const { ObjectId } = mongoose.Types;\nexport default User;\n"],"file":"model.js"}