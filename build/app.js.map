{"version":3,"sources":["../src/app.js"],"names":["dotenv","config","app","FRONTEND_APP_URL","process","env","NODE_ENV","corsOptions","origin","credentials","use","bodyParser","urlencoded","extended","limit","json","database","DB_HOS","DB_HOST","mongoose","Promise","global","connect","useNewUrlParser","useUnifiedTopology","then","console","log","err","exit","set","get","req","res","message","next","locals","userId","userType","role","api","error","Error","status"],"mappings":";;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;AAVA;AAaAA,mBAAOC,MAAP;;AAEA,IAAMC,GAAG,GAAG,0BAAZ;AAEA,IAAMC,gBAAgB,GACpBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACIF,OAAO,CAACC,GAAR,CAAYF,gBADhB,GAEI,uBAHN;AAKA,IAAMI,WAAW,GAAG;AAClBC,EAAAA,MAAM,EAAEL,gBADU;AAGlBM,EAAAA,WAAW,EAAE;AAHK,CAApB;AAMAP,GAAG,CAACQ,GAAJ,CAAQ,sBAAKH,WAAL,CAAR;AACAL,GAAG,CAACQ,GAAJ,CAAQ,+BAAR;AACAR,GAAG,CAACQ,GAAJ,CAAQC,uBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE,IAAZ;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAAtB,CAAR;AACAZ,GAAG,CAACQ,GAAJ,CAAQC,uBAAWI,IAAX,CAAgB;AAAED,EAAAA,KAAK,EAAE;AAAT,CAAhB,CAAR;AACAZ,GAAG,CAACQ,GAAJ,CAAQ,wBAAO,KAAP,CAAR;AAEA,IAAMM,QAAQ,GACZZ,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACIF,OAAO,CAACC,GAAR,CAAYY,MADhB,GAEIb,OAAO,CAACC,GAAR,CAAYa,OAHlB,C,CAMA;;AACAC,qBAASC,OAAT,GAAmBC,MAAM,CAACD,OAA1B;;AAEAD,qBACGG,OADH,CACWN,QADX,EACqB;AACjBO,EAAAA,eAAe,EAAE,IADA;AAEjBC,EAAAA,kBAAkB,EAAE;AAFH,CADrB,EAKGC,IALH,CAKQ,YAAM;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACD,CAPH,WAQS,UAACC,GAAD,EAAS;AACdF,EAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ,EAAiB,mDAAjB;AACAxB,EAAAA,OAAO,CAACyB,IAAR;AACD,CAXH;;AAaAV,qBAASW,GAAT,CAAa,kBAAb,EAAiC,KAAjC;;AACAX,qBAASW,GAAT,CAAa,gBAAb,EAA+B,IAA/B,E,CAEA;;;AACA5B,GAAG,CAAC6B,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvBA,EAAAA,GAAG,CAAClB,IAAJ,CAAS;AAAEmB,IAAAA,OAAO,EAAE;AAAX,GAAT;AACF,CAFF,E,CAIC;;AACDhC,GAAG,CAACQ,GAAJ,CAAQ,UAACsB,GAAD,EAAMC,GAAN,EAAWE,IAAX,EAAoB;AAC1BF,EAAAA,GAAG,CAACG,MAAJ,CAAWC,MAAX,GAAoB,GAApB;AACAJ,EAAAA,GAAG,CAACG,MAAJ,CAAWE,QAAX,GAAsB,WAAtB;AACAL,EAAAA,GAAG,CAACG,MAAJ,CAAWG,IAAX,GAAkB,EAAlB;AACAJ,EAAAA,IAAI;AACL,CALD,E,CAOA;;AACAjC,GAAG,CAACQ,GAAJ,CAAQ,SAAR,EAAmB8B,eAAnB;AAEAtC,GAAG,CAACQ,GAAJ,CAAQ,UAACsB,GAAD,EAAMC,GAAN,EAAWE,IAAX,EAAoB;AAC1B,MAAMM,KAAK,GAAG,IAAIC,KAAJ,CAAU,YAAV,CAAd;AACAD,EAAAA,KAAK,CAACE,MAAN,GAAe,GAAf;AACAR,EAAAA,IAAI,CAACM,KAAD,CAAJ;AACD,CAJD;AAOAvC,GAAG,CAACQ,GAAJ,CAAQ,UAAC+B,KAAD,EAAQT,GAAR,EAAaC,GAAb,EAAkBE,IAAlB,EAA2B;AACjCF,EAAAA,GAAG,CAACU,MAAJ,CAAWF,KAAK,CAACE,MAAN,IAAgB,GAA3B;AACAV,EAAAA,GAAG,CAAClB,IAAJ,CAAS;AACP0B,IAAAA,KAAK,EAAE;AACLP,MAAAA,OAAO,wCAAiCO,KAAK,CAACP,OAAvC;AADF;AADA,GAAT;AAKAC,EAAAA,IAAI;AACL,CARD;eAUejC,G","sourcesContent":["// import dependencies\nimport express from \"express\";\nimport bodyParser from \"body-parser\";\nimport morgan, { compile } from \"morgan\";\nimport mongoose from \"mongoose\";\nimport cookieParser from \"cookie-parser\";\nimport dotenv from \"dotenv\";\nimport cors from \"cors\";\nimport path from \"path\";\n\nimport api from \"./api\";\n\n\ndotenv.config();\n\nconst app = express();\n\nconst FRONTEND_APP_URL =\n  process.env.NODE_ENV === \"production\"\n    ? process.env.FRONTEND_APP_URL\n    : \"http://localhost:3000\";\n\nconst corsOptions = {\n  origin: FRONTEND_APP_URL,\n\n  credentials: true,\n};\n\napp.use(cors(corsOptions));\napp.use(cookieParser());\napp.use(bodyParser.urlencoded({ extended: true, limit: \"10mb\" }));\napp.use(bodyParser.json({ limit: \"10mb\" }));\napp.use(morgan(\"dev\"));\n\nconst database =\n  process.env.NODE_ENV === \"production\"\n    ? process.env.DB_HOS\n    : process.env.DB_HOST;\n\n\n// Configuring the database\nmongoose.Promise = global.Promise;\n\nmongoose\n  .connect(database, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n  })\n  .then(() => {\n    console.log(\"Successfully connected to the database!\");\n  })\n  .catch((err) => {\n    console.log(err, \"Could not connect to the database. Exiting now...\");\n    process.exit();\n  });\n\nmongoose.set(\"useFindAndModify\", false);\nmongoose.set(\"useCreateIndex\", true);\n\n// define a simple route\napp.get(\"/\", (req, res) => {\n    res.json({ message: \"Welcome to  Spaceinnovationhub API.\" });\n });\n\n // modify request object\napp.use((req, res, next) => {\n  res.locals.userId = 0.0;\n  res.locals.userType = \"anonymous\";\n  res.locals.role = \"\";\n  next();\n});\n\n// Use Routes\napp.use(\"/api/v1\", api);\n\napp.use((req, res, next) => {\n  const error = new Error(\"Not found!\");\n  error.status = 404;\n  next(error);\n});\n \n\napp.use((error, req, res, next) => {\n  res.status(error.status || 500);\n  res.json({\n    error: {\n      message: `Spaceinnovationhub API says ${error.message}`,\n    },\n  }); \n  next();\n});\n\nexport default app;"],"file":"app.js"}